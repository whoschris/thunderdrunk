{"version":3,"sources":["constants.js","App.js","index.js"],"names":["THUNDER","formatPlayerList","players","filter","str","length","map","trim","Start","props","inputRef","React","createRef","handleChange","bind","handleEnterShuffle","handleEnterClear","handleEnterStart","e","this","setState","cursorPos","target","selectionEnd","onChangeFun","key","handleShuffleFun","handleClearFun","handleStartFun","current","names","join","id","href","name","rows","cols","spellCheck","autoFocus","value","onChange","ref","onMouseUp","onKeyUp","Component","Player","drinking","className","Lineup","index","drinkingIndex","Game","state","count","numPlayers","ended","handleProgress","handleEnded","prog","playedSeconds","currentDrinker","onDeck","align","rowSpan","url","progressInterval","volume","width","height","onProgress","onEnded","config","youtube","playerVars","diablekb","playsinlinee","handleRestartFun","App","start","handleNewChar","curPosNew","tmp","split","i","formatted","j","Math","floor","random","temp","alert","handleShuffle","handleClear","handleStart","handleRestart","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e68cd73.chunk.js","sourcesContent":["\nexport const THUNDER = [29.266666666666666, \n    32.86666666666667, \n    36.53333333333333, \n    40.06666666666667, \n    43.7, \n    47.3, \n    50.86666666666667, \n    54.5, \n    58.1, \n    61.666666666666664, \n    70.73333333333333, \n    77.9, \n    85.1, \n    92.3, \n    100.4, \n    111.43333333333334, \n    161.93333333333334, \n    165.56666666666666, \n    169.26666666666668, \n    172.83333333333334, \n    222.9, \n    226.4, \n    229.96666666666667, \n    233.66666666666666, \n    251.26666666666668, \n    254.76666666666668, \n    257.23333333333335, \n    258.3666666666667, \n    262.0, \n    265.3666666666667, \n    268.93333333333334, \n    272.4, \n    275.93333333333334, \n    279.1666666666667];\n\nexport const OFFSET = 0.1;\n\nexport const MAX_NAME_LENGTH = 24;\n\n\n","import React from 'react';\nimport ReactPlayer from 'react-player';\nimport './App.css';\nimport { OFFSET, MAX_NAME_LENGTH } from './constants';\nimport { THUNDER } from './constants';\n\n\nfunction formatPlayerList(players){\n  const formatted = players.filter(str => str.length !== 0).map((str) => {\n    return str.trim();\n  });\n  return formatted;\n}\n\nclass Start extends React.Component {\n  //TODO: add line numbers to textarea\n  constructor(props){\n    super(props);\n    this.inputRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEnterShuffle = this.handleEnterShuffle.bind(this);\n    this.handleEnterClear = this.handleEnterClear.bind(this);\n    this.handleEnterStart = this.handleEnterStart.bind(this);\n  }\n\n  handleChange(e) { \n    this.setState({\n      cursorPos: e.target.selectionEnd,\n    })\n    this.props.onChangeFun(e.target);\n  }\n\n  handleEnterShuffle(e) {\n    if (e.key === \"Enter\") {\n      this.props.handleShuffleFun();\n    }\n  }\n\n  handleEnterClear(e) {\n    if (e.key === \"Enter\") {\n      this.props.handleClearFun();\n    }\n  }\n\n  handleEnterStart(e) {\n    if (e.key === \"Enter\") {\n      this.props.handleStartFun();\n    }\n  }\n\n  componentDidUpdate() {\n    this.inputRef.current.selectionEnd = this.props.cursorPos;\n  }\n\n  render(){\n    //format names from array\n    let names = this.props.players.join(\"\\n\");\n    return(\n      <div>\n        <div id=\"instructions\">\n          <p>A simple app to help you play the <a href=\"https://www.drinkiwiki.com/Thunderstruck\">Thunderstruck drinking game</a></p>\n        </div>  \n        <div id=\"player-input\">\n          <p>Enter player names (one per line) and hit \"Start!\" to begin:</p>\n          <textarea \n            name=\"player-input\" \n            rows=\"20\" cols=\"24\" \n            spellCheck=\"false\"\n            autoFocus\n            value={names}\n            onChange={this.handleChange}\n            ref={this.inputRef}>        \n          </textarea>\n        </div>\n        <div id=\"control-buttons\">\n          <button id=\"shuffle\" onMouseUp={this.props.handleShuffleFun} onKeyUp={this.handleEnterShuffle}>Shuffle</button>\n          <button id=\"clear\" onMouseUp={this.props.handleClearFun} onKeyUp={this.handleEnterClear}>Clear</button>\n          <button id=\"Start\" onMouseUp={this.props.handleStartFun} onKeyUp={this.handleEnterStart}>Start!</button>  \n        </div>\n      </div>\n    );\n  }\n}\n\nfunction Player(props){\n  if (props.drinking){\n    return <p className=\"lineup-elt\"><strong>{props.name}</strong></p>;\n  }\n  return <p className=\"lineup-elt\">{props.name}</p>;\n}\n\nfunction Lineup(props) {\n  const lineup = props.players.map((name ,index) => {\n    if (props.drinkingIndex === index) {\n      return <Player name={name} drinking={true} key={index}/>;\n    }\n    else {\n      return <Player name={name} drinking={false} key={index}/>;\n    }\n  });\n  return lineup;\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      count: 0,\n      numPlayers: props.players.length,\n      ended: false\n    }\n\n    this.handleProgress = this.handleProgress.bind(this);\n    this.handleEnded = this.handleEnded.bind(this);\n  }\n\n  handleProgress(prog) {\n    if ((prog.playedSeconds+OFFSET) >= THUNDER[this.state.count]){\n\n      this.setState({\n        count: this.state.count + 1,\n      })\n    }\n  }\n\n  handleEnded(e) {\n    this.setState({\n      ended: true,\n    })\n  }\n\n  render(){\n    let currentDrinker = \"\";\n    let onDeck = \" is on deck\"\n    let drinkingIndex = -1;\n\n    if (this.state.ended) {\n      currentDrinker = \"Finished!\"\n      onDeck = \"\";\n    }\n    else {\n      if (this.state.count === 0) {\n        currentDrinker = \"waiting...\";\n        onDeck = this.props.players[0] + onDeck;\n      }\n      else {\n        drinkingIndex = (this.state.count-1) % this.state.numPlayers;\n        currentDrinker = this.props.players[drinkingIndex]\n          + \", drink!\";\n\n        if (this.state.count < THUNDER.length){\n          onDeck = this.props.players[this.state.count % this.state.numPlayers] + onDeck;\n        }\n        else {\n          onDeck = \"\";\n        }\n      }\n  \n    }\n    //TODO: auto shrink font size for \n    return(\n      <div>\n        <table className=\"main-table\" align=\"center\">\n          <tbody>\n            <tr>\n              <td className=\"vid-cell\" rowSpan=\"3\">\n                <ReactPlayer \n                  url=\"https://www.youtube.com/watch?v=v2AC41dglnM\"\n                  progressInterval={10} \n                  volume={1}\n                  width={640}\n                  height={480}\n                  onProgress={this.handleProgress}\n                  onEnded={this.handleEnded}\n                  config={{\n                    youtube: {\n                      playerVars: { diablekb: 1, playsinlinee: 1}\n                    }\n                  }}\n                />\n                <button id=\"back\" onMouseUp={this.props.handleRestartFun}>Restart</button>\n              </td>\n              <td className=\"current-cell\">\n                <p className=\"drinking-player\">{currentDrinker}</p>\n                <p className=\"on-deck-player\">{onDeck}</p>\n              </td>\n            </tr>\n            <tr>\n              <td className=\"lineup-cell\">\n                <p className=\"lineup-header\">Lineup</p>\n                  <Lineup \n                    players={this.props.players}\n                    drinkingIndex={drinkingIndex}\n                  />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      players: [],\n      start: true,\n      cursorPos: 0,\n    };\n    this.handleNewChar = this.handleNewChar.bind(this);\n  }\n\n  handleNewChar(target){\n    let curPosNew = target.selectionEnd;\n    const tmp = target.value.split(\"\\n\").map((str, i) => {\n      if (str.length > MAX_NAME_LENGTH){\n        curPosNew = curPosNew - 1;\n        return this.state.players[i];\n      }\n      return str;\n    });\n\n    this.setState({\n      players: tmp,\n      cursorPos: curPosNew,\n     });\n  }\n\n  handleShuffle() {\n    const formatted = formatPlayerList(this.state.players);\n    //fisher-yates shuffle\n    for(let i = formatted.length - 1; i > 0; i--){\n      const j = Math.floor(Math.random() * i)\n      const temp = formatted[i]\n      formatted[i] = formatted[j]\n      formatted[j] = temp\n    }\n\n    this.setState({\n      players: formatted,\n    });\n  }\n\n  handleClear() {\n    this.setState({\n      players: [],\n      cursorPos: 0,\n    });\n  }\n\n  handleStart() { \n    const formatted = formatPlayerList(this.state.players);\n    if (formatted.length < 2) {\n      alert(\"Must have at least 2 players\");\n      return;\n    }\n    this.setState({\n      players: formatted,\n      start: false,\n    });\n  }\n\n  handleRestart() {\n    this.setState({\n      start: true,\n    });\n  }\n\n  render() {\n    if (this.state.start){\n      return(\n        <Start \n          players={this.state.players} \n          cursorPos={this.state.cursorPos}\n          onChangeFun={this.handleNewChar}\n          handleShuffleFun={() => this.handleShuffle()}\n          handleClearFun={() => this.handleClear()}\n          handleStartFun={() => this.handleStart()}\n        />\n      );\n    }\n    else {\n      return(\n        <Game players={this.state.players} handleRestartFun={() => this.handleRestart()}/>\n      )\n    }\n  }\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}